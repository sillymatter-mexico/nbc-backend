version: '2'

services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD:
      POSTGRES_USER: postgres
    networks:
      - internal
    expose:
      - "5432"
    volumes:
      - dbdata:/var/lib/postgresql/data/

  rabbitmq:
    image: rabbitmq:3
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - internal
    expose:
      - "5672"
    depends_on:
      - db

  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh /site/docker-utils/app-start.sh
    environment:
      - PROJECT_NAME=universal
    volumes:
      - .:/site/proj/
      - static-volume:/site/htdocs/static/
    expose:
      - "8000"
    depends_on:
      - rabbitmq
    networks:
      - internal

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh /site/docker-utils/celerybeat-start.sh
    environment:
      - PROJECT_NAME=universal
    volumes:
      - .:/site/proj/
      - static-volume:/site/htdocs/static/
    depends_on:
      - rabbitmq
    networks:
      - internal

  # Uncomment to create Web interface
  web:
    image: nginx:1.11
    ports:
      - "8080:80"
      - "443:443"
    depends_on:
      - app
    volumes:
      - ./docker-utils/nginx/default.template.conf:/root/default.template.conf
      #- ./docker-utils/ssl/:/site/ssl/
      - static-volume:/static
    command: /bin/bash -c "envsubst '$$NGINX_HTTP_PORT $$NGINX_HTTPS_PORT' < /root/default.template.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    environment:
      - NGINX_HTTP_PORT=80
      - NGINX_HTTPS_PORT=443
    networks:
      - internal

networks:
  internal:

volumes:
  static-volume:
    driver: local
  dbdata:
    driver: local
